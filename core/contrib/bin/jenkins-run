#!/bin/sh

function generate_passwd_file() {
  USER_ID=$(id -u)
  GROUP_ID=$(id -g)

  if [ x"$USER_ID" != x"0" -a x"$USER_ID" != x"997" ]; then
    echo "default:x:${USER_ID}:${GROUP_ID}:Default Application User:${HOME}:/sbin/nologin" >> /etc/passwd
  fi
}

generate_passwd_file

JENKINS_WAR="/usr/lib/jenkins/jenkins.war"
JENKINS_CONFIG=/etc/sysconfig/jenkins
[ -f "$JENKINS_CONFIG" ] && . "$JENKINS_CONFIG"

JENKINS_JAVA_CMD="/usr/bin/java"
JENKINS_JAVA_OPTIONS="${JENKINS_JAVA_OPTIONS:--XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap}"


"${JENKINS_JAVA_CMD}" $JENKINS_JAVA_OPTIONS -XshowSettings:vm -version

#Copy all configuration files to JENKINS_HOME
rsync -av --no-o --no-g --no-perms --no-acls --no-xattrs --no-super --omit-dir-times $JENKINS_REF_HOME/ $JENKINS_HOME/

JENKINS_WEBROOT_DIR='/var/cache/jenkins/war--daemon'

#Extract jenkins war file
unzip -qo $JENKINS_WAR -d $JENKINS_WEBROOT_DIR

#https://unix.stackexchange.com/questions/34325/sorting-the-output-of-find

echo "Running Jenkins System Installer(s)"
[ -d "$JENKINS_HOME/install.groovy.d" ] && find $JENKINS_HOME/install.groovy.d/ -maxdepth 1 -type f -print0 | sort -z | xargs -r0 -I '{}' java -cp /var/cache/jenkins/war--daemon/WEB-INF/lib/groovy-all-2.4.11.jar groovy.lang.GroovyShell '{}' '{}'

echo "Running Jenkins Job Installer(s)"
[ -d "$JENKINS_HOME/jobs" ] && find $JENKINS_HOME/jobs/ -maxdepth 2  -type f -name '*.install.groovy' -print0 | sort -z | xargs -r0 -I '{}' java -cp /var/cache/jenkins/war--daemon/WEB-INF/lib/groovy-all-2.4.11.jar groovy.lang.GroovyShell '{}' '{}'


JENKINS_JAVA_OPTIONS="${JENKINS_JAVA_OPTIONS} -Dhudson.model.UpdateCenter.never=true -Dhudson.Util.noSymLink=true -Djenkins.model.Jenkins.buildsDir=\${JENKINS_HOME}/builds/\${ITEM_FULL_NAME}"


JAVA_CMD="$JENKINS_JAVA_CMD $JENKINS_JAVA_OPTIONS -Djenkins.install.runSetupWizard=false -DJENKINS_HOME=$JENKINS_HOME -jar $JENKINS_WAR"
PARAMS="--webroot=$JENKINS_WEBROOT_DIR"

#--logfile=/var/log/jenkins/jenkins.log
[ -n "$JENKINS_PORT" ] && PARAMS="$PARAMS --httpPort=$JENKINS_PORT"
[ -n "$JENKINS_LISTEN_ADDRESS" ] && PARAMS="$PARAMS --httpListenAddress=$JENKINS_LISTEN_ADDRESS"
[ -n "$JENKINS_HTTPS_PORT" ] && PARAMS="$PARAMS --httpsPort=$JENKINS_HTTPS_PORT"
[ -n "$JENKINS_HTTPS_KEYSTORE" ] && PARAMS="$PARAMS --httpsKeyStore=$JENKINS_HTTPS_KEYSTORE"
[ -n "$JENKINS_HTTPS_KEYSTORE_PASSWORD" ] && PARAMS="$PARAMS --httpsKeyStorePassword='$JENKINS_HTTPS_KEYSTORE_PASSWORD'"
[ -n "$JENKINS_HTTPS_LISTEN_ADDRESS" ] && PARAMS="$PARAMS --httpsListenAddress=$JENKINS_HTTPS_LISTEN_ADDRESS"
[ -n "$JENKINS_DEBUG_LEVEL" ] && PARAMS="$PARAMS --debug=$JENKINS_DEBUG_LEVEL"
[ -n "$JENKINS_HANDLER_STARTUP" ] && PARAMS="$PARAMS --handlerCountStartup=$JENKINS_HANDLER_STARTUP"
[ -n "$JENKINS_HANDLER_MAX" ] && PARAMS="$PARAMS --handlerCountMax=$JENKINS_HANDLER_MAX"
[ -n "$JENKINS_HANDLER_IDLE" ] && PARAMS="$PARAMS --handlerCountMaxIdle=$JENKINS_HANDLER_IDLE"
[ -n "$JENKINS_ARGS" ] && PARAMS="$PARAMS $JENKINS_ARGS"

if [ "$JENKINS_ENABLE_ACCESS_LOG" = "yes" ]; then
    PARAMS="$PARAMS --accessLoggerClassName=winstone.accesslog.SimpleAccessLogger --simpleAccessLogger.format=combined --simpleAccessLogger.file=/var/log/jenkins/access_log"
fi
set -x
exec $JAVA_CMD $PARAMS